{"version":3,"sources":["CameraSetting.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CameraSetting","React","useState","value","setValue","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","scrollButtons","Tab","label","role","hidden","App","theme","createMuiTheme","palette","type","primary","main","secondary","typography","button","textTransform","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAUaA,EAAgB,WAAO,IAAD,EACPC,IAAMC,SAAS,GADR,mBAC1BC,EAD0B,KACnBC,EADmB,KAMjC,OACE,gCACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,CACEJ,MAAOA,EACPK,SARa,SAACC,EAA8BC,GAClDN,EAASM,IAQHC,eAAe,YACfC,UAAU,YACVC,QAAQ,aACRC,cAAc,OANhB,UAQE,cAACC,EAAA,EAAD,CAAKC,MAAM,6BACX,cAACD,EAAA,EAAD,CAAKC,MAAM,6BACX,cAACD,EAAA,EAAD,CAAKC,MAAM,kCAGf,qBAAKC,KAAK,WAAWC,OAAkB,IAAVf,EAA7B,oBAGA,qBAAKc,KAAK,WAAWC,OAAkB,IAAVf,EAA7B,oBAGA,qBAAKc,KAAK,WAAWC,OAAkB,IAAVf,EAA7B,wB,QCRSgB,MAzBf,WACE,IAAMC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,KAAM,OACNC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,YAGVE,WAAY,CACVC,OAAQ,CACNC,cAAe,WAIrB,OACE,eAACC,EAAA,EAAD,CAAeV,MAAOA,EAAtB,UACE,cAACW,EAAA,EAAD,IACA,cAAC,EAAD,Q,QCXSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCFdQ,EAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9fb0fbc4.chunk.js","sourcesContent":["/*\n * Created by Stefan Hong on 2021-03-31.\n * Copyright (c) 2021 Taiwan AI Labs.\n */\nimport AppBar from '@material-ui/core/AppBar';\n// import QRCode from 'qrcode.react';\nimport React from 'react';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\n\nexport const CameraSetting = () => {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n  return (\n    <div>\n      <AppBar position='static'>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor='secondary'\n          textColor='secondary'\n          variant='scrollable'\n          scrollButtons='auto'\n        >\n          <Tab label='基礎設定' />\n          <Tab label='日間參數' />\n          <Tab label='夜間參數' />\n        </Tabs>\n      </AppBar>\n      <div role='tabpanel' hidden={value !== 0}>\n        Item 0\n      </div>\n      <div role='tabpanel' hidden={value !== 1}>\n        Item 1\n      </div>\n      <div role='tabpanel' hidden={value !== 2}>\n        Item 2\n      </div>\n    </div>\n  );\n};\n\n// <QRCode value='m3dVr5p30cGwAx0sHe2g1q1v0oCoB7oS1oR0oW1oD2oV0i32S45!MLAPS=0!M64BT=1' size={300} />\n","import { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport { CameraSetting } from './CameraSetting';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        main: '#424242',\n      },\n      secondary: {\n        main: '#81d4fa',\n      },\n    },\n    typography: {\n      button: {\n        textTransform: 'none',\n      },\n    },\n  });\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <CameraSetting />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import './index.css';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}